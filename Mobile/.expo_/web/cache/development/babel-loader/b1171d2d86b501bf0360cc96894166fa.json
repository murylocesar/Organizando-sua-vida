{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\GIT\\\\Full-Stack-NodeJs-MongoDB-ReactJs-e-Native\\\\Mobile\\\\src\\\\views\\\\Home\\\\index.js\";\nimport React, { useState, useEffect, map } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styles from \"./styles\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport TaskCard from \"../../components/TaskCard\";\nimport api from \"../../services/api\";\nexport default function Home() {\n  var _useState = useState('today'),\n      _useState2 = _slicedToArray(_useState, 2),\n      filter = _useState2[0],\n      setFilter = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      task = _useState4[0],\n      setTask = _useState4[1];\n\n  function loadTasks() {\n    return _regeneratorRuntime.async(function loadTasks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(api.get(\"/task/filter/\" + filter + \"/00:00:00:00:00:02\").then(function (response) {\n              setTasks(response.data);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadTasks();\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    showNotification: true,\n    showBack: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.filter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setFilter('all');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: filter == 'all' ? styles.filterTextActived : styles.filterTextInative,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Todos\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setFilter('today');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: filter == 'today' ? styles.filterTextActived : styles.filterTextInative,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Hoje\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setFilter('week');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: filter == 'week' ? styles.filterTextActived : styles.filterTextInative,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Semana\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setFilter('month');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: filter == 'month' ? styles.filterTextActived : styles.filterTextInative,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"M\\xEAs\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setFilter('year');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: filter == 'year' ? styles.filterTextActived : styles.filterTextInative,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Ano\"))), React.createElement(View, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"TAREFAS\")), React.createElement(ScrollView, {\n    style: styles.content,\n    contentContainerStyle: {\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, task.map(function (t) {\n    return React.createElement(TaskCard, {\n      done: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    });\n  })), React.createElement(Footer, {\n    icon: 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/GIT/Full-Stack-NodeJs-MongoDB-ReactJs-e-Native/Mobile/src/views/Home/index.js"],"names":["React","useState","useEffect","map","styles","Header","Footer","TaskCard","api","Home","filter","setFilter","task","setTask","loadTasks","get","then","response","setTasks","data","container","filterTextActived","filterTextInative","title","titleText","content","alignItems","t"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, map } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView } from 'react-native';\r\n\r\nimport styles from './styles';\r\n\r\n// componentes\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport TaskCard from '../../components/TaskCard';\r\n\r\nimport api from '../../services/api';\r\n\r\nexport default function Home() {\r\n\r\n    const [filter, setFilter] = useState('today');\r\n    const [task, setTask] = useState([]);\r\n\r\n    async function loadTasks() {\r\n        await api.get(`/task/filter/${filter}/00:00:00:00:00:02`).then(response => {\r\n            setTasks(response.data)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTasks();\r\n    })\r\n\r\n    return (\r\n\r\n        <View style={styles.container}>\r\n            <Header\r\n                showNotification={true}\r\n                showBack={true}\r\n            />\r\n            <View style={styles.filter}>\r\n                <TouchableOpacity onPress={() => setFilter('all')}>\r\n                    <Text style={\r\n                        filter == 'all' ?\r\n                            styles.filterTextActived\r\n                            :\r\n                            styles.filterTextInative\r\n                    }>Todos</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={() => setFilter('today')}>\r\n                    <Text style={\r\n                        filter == 'today' ?\r\n                            styles.filterTextActived\r\n                            :\r\n                            styles.filterTextInative\r\n                    }>Hoje</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={() => setFilter('week')}>\r\n                    <Text style={\r\n                        filter == 'week' ?\r\n                            styles.filterTextActived\r\n                            :\r\n                            styles.filterTextInative\r\n                    }>Semana</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={() => setFilter('month')}>\r\n                    <Text style={\r\n                        filter == 'month' ?\r\n                            styles.filterTextActived\r\n                            :\r\n                            styles.filterTextInative\r\n                    }>Mês</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={() => setFilter('year')}>\r\n                    <Text style={\r\n                        filter == 'year' ?\r\n                            styles.filterTextActived\r\n                            :\r\n                            styles.filterTextInative\r\n                    }>Ano</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.title}>\r\n                <Text style={styles.titleText}>TAREFAS</Text>\r\n            </View>\r\n\r\n            <ScrollView style={styles.content} contentContainerStyle={{ alignItems: 'center' }}>\r\n                {\r\n                    task.map(t => (\r\n                        <TaskCard done={false} />\r\n                    ))\r\n                }\r\n            </ScrollView>\r\n            \r\n            <Footer\r\n                icon={'add'}\r\n            />\r\n        </View >\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}